package main

//http://www.nxp.com/documents/data_sheet/PCF8574.pdf

//http://www.rototron.info/raspberry-pi-graphics-lcd-display-tutorial/
import (
	"bufio"
	"os"
	"strconv"
	"time"

	"flag"

	"github.com/kidoman/embd"
	"github.com/kidoman/embd/controller/st7565p"

	_ "github.com/kidoman/embd/host/all"

	"fmt"
)

func main() {
	flag.Parse()
	embd.SetHost(embd.HostRPi, 50420202)
	if err := embd.InitGPIO(); err != nil {
		panic(err)
	}

	defer embd.CloseGPIO()

	hd, err := st7565p.NewGpio(st7565p.DefaultMap8080)

	if err != nil {
		panic(err)
	}
	defer hd.Close()

	//dis := time.Now().Sub(start).Seconds()

	s := time.Now()
	hd.Clear()
	dis := time.Now().Sub(s).Minutes()
	fmt.Printf("hd.Clear using minutes %v\n", dis)

	/*
	 */
	a(hd)
	//modify(hd)
	//time.Sleep(1 * time.Minute)
}

func modify(hd *st7565p.LCD) error {
	running := true
	reader := bufio.NewReader(os.Stdin)
	for running {
		data, _, _ := reader.ReadLine()
		command := string(data)
		if command == "stop" {
			running = false
		}
		abb, _ := strconv.Atoi(command)
		fmt.Printf("received value is %v\n", abb)

		//if err := hd.SetBoosterRatioMode(byte(abb)); err != nil {
		//	return err
		//}
	}
	return nil
}

func a(hd *st7565p.LCD) {
	for i := 0; i < 8; i++ {
		hd.SetCursor(8, byte(i))
		for j := 0; j < 112; j++ {
			hd.WriteData(gushi[i][j])
		}
	} /**/

}

func b(hd *st7565p.LCD) {
	hd.SetCursor(0, 3)
	/*
		hd.WriteData(0xFF)
		hd.WriteData(0xFE)
		hd.WriteData(0xFD)
		hd.WriteData(0xFC)
		hd.WriteData(0xFB)
		hd.WriteData(0xFA)
		hd.WriteData(0xF9)
		hd.WriteData(0x0F)

		hd.WriteData(0x0F)
		hd.WriteData(0x0E)
		hd.WriteData(0x0D)
		hd.WriteData(0x0C)
		hd.WriteData(0x0B)
		hd.WriteData(0x0A)
		hd.WriteData(0x09)
		hd.WriteData(0x08)
		hd.WriteData(0x07)
		hd.WriteData(0x06)
		hd.WriteData(0x05)
		hd.WriteData(0x04)
		hd.WriteData(0x03)
		hd.WriteData(0x02)
		hd.WriteData(0x01)
		hd.WriteData(0x00)
	*/
	/*--  文字:  问  --*/
	/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
	x := []byte{0x00, 0x1F, 0x80, 0x40, 0x00, 0x47, 0x44, 0x44, 0x44, 0x47, 0x40, 0x40, 0x40, 0x7F, 0x00, 0x00}
	y := []byte{0x00, 0xFF, 0x00, 0x00, 0x00, 0xF8, 0x10, 0x10, 0x10, 0xF8, 0x00, 0x02, 0x01, 0xFE, 0x00, 0x00}
	lenx := len(x)
	leny := len(y)
	//y := []byte{0x02, 0x04, 0x08, 0x30, 0xFF, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3F, 0x00, 0x00, 0x00}
	hd.SetCursor(60, 4)
	for _, b := range x {
		hd.WriteData(b)
	}
	hd.SetCursor(60, 3)
	for _, b := range y {
		hd.WriteData(b)
	}

	hd.SetCursor(20, 4)
	for i := lenx - 1; i >= 0; i-- {
		hd.WriteData(x[i])
	}
	hd.SetCursor(20, 3)
	for i := leny - 1; i >= 0; i-- {
		hd.WriteData(y[i])
	}

}

var gushi = [8][112]byte{
	{0x10, 0x10, 0x92, 0x92, 0x92, 0xF2, 0x9E, 0x92, 0x92, 0x92, 0x92, 0x92, 0xFE, 0x10, 0x10, 0x00, //君问归期未有期
		0x00, 0x00, 0xF8, 0x01, 0x06, 0xE0, 0x22, 0x22, 0x22, 0x22, 0xE2, 0x02, 0x02, 0xFE, 0x00, 0x00,
		0x00, 0xF8, 0x00, 0x00, 0xFF, 0x00, 0x04, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0xFC, 0x00, 0x00,
		0x00, 0x04, 0xFF, 0x54, 0x54, 0x54, 0xFF, 0x04, 0x00, 0xFE, 0x22, 0x22, 0x22, 0xFE, 0x00, 0x00,
		0x40, 0x40, 0x48, 0x48, 0x48, 0x48, 0xC8, 0xFF, 0x48, 0x48, 0x48, 0x48, 0x48, 0x40, 0x40, 0x00,
		0x00, 0x04, 0x84, 0x44, 0xE4, 0x34, 0x2C, 0x27, 0x24, 0x24, 0x24, 0xE4, 0x04, 0x04, 0x04, 0x00,
		0x00, 0x04, 0xFF, 0x54, 0x54, 0x54, 0xFF, 0x04, 0x00, 0xFE, 0x22, 0x22, 0x22, 0xFE, 0x00, 0x00},

	{0x40, 0x20, 0x10, 0x0C, 0xFE, 0x45, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xFD, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xFF, 0x00, 0x00, 0x03, 0x02, 0x02, 0x02, 0x02, 0x03, 0x40, 0x80, 0x7F, 0x00, 0x00,
		0x00, 0x87, 0x40, 0x30, 0x0F, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3F, 0x00, 0x00,
		0x42, 0x22, 0x1B, 0x02, 0x02, 0x0A, 0x33, 0x62, 0x18, 0x07, 0x02, 0x22, 0x42, 0x3F, 0x00, 0x00,
		0x20, 0x20, 0x10, 0x10, 0x08, 0x06, 0x01, 0xFF, 0x01, 0x02, 0x04, 0x08, 0x18, 0x30, 0x10, 0x00,
		0x02, 0x01, 0x00, 0x00, 0xFF, 0x09, 0x09, 0x09, 0x29, 0x49, 0xC9, 0x7F, 0x00, 0x00, 0x00, 0x00,
		0x42, 0x22, 0x1B, 0x02, 0x02, 0x0A, 0x33, 0x62, 0x18, 0x07, 0x02, 0x22, 0x42, 0x3F, 0x00, 0x00},

	{0x00, 0x00, 0xFE, 0x42, 0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x42, 0xFE, 0x00, 0x00, 0x00, //巴山夜雨涨池
		0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
		0x04, 0x04, 0x84, 0xC4, 0x3C, 0x14, 0x85, 0x66, 0xBC, 0x24, 0x24, 0x24, 0xE4, 0x24, 0x04, 0x00,
		0x02, 0x02, 0xF2, 0x32, 0x52, 0x92, 0x12, 0xFE, 0x32, 0x52, 0x92, 0x12, 0xF2, 0x02, 0x02, 0x00,
		0x10, 0x61, 0x86, 0x60, 0xF2, 0x12, 0x12, 0x1E, 0x80, 0xFF, 0xA0, 0x90, 0x88, 0x86, 0x80, 0x00,
		0x24, 0x24, 0xE4, 0xFC, 0xA2, 0x22, 0x22, 0x80, 0x70, 0x00, 0xFF, 0x40, 0x20, 0x18, 0x00, 0x00,
		0x10, 0x60, 0x02, 0x8C, 0x60, 0x80, 0xF8, 0x40, 0x40, 0xFE, 0x20, 0x20, 0x10, 0xF0, 0x00, 0x00},

	{0x00, 0x00, 0x3F, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x78, 0x20, 0x00,
		0x00, 0x20, 0x7F, 0x20, 0x20, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7F, 0x00, 0x00,
		0x02, 0x01, 0x00, 0xFF, 0x00, 0x82, 0x41, 0x22, 0x14, 0x09, 0x14, 0x23, 0x40, 0xC0, 0x40, 0x00,
		0x00, 0x00, 0xFF, 0x01, 0x02, 0x04, 0x00, 0x7F, 0x01, 0x02, 0x44, 0x80, 0x7F, 0x00, 0x00, 0x00,
		0x04, 0xFC, 0x03, 0x00, 0x01, 0x41, 0x81, 0x7F, 0x00, 0xFF, 0x42, 0x0C, 0x30, 0x60, 0x20, 0x00,
		0x02, 0x01, 0x00, 0xFF, 0x00, 0x83, 0x40, 0x20, 0x18, 0x07, 0x01, 0x06, 0x18, 0xE0, 0x40, 0x00,
		0x08, 0x08, 0x7C, 0x03, 0x00, 0x00, 0x3F, 0x40, 0x40, 0x5F, 0x40, 0x42, 0x44, 0x43, 0x70, 0x00},

	{0x80, 0x40, 0xF0, 0x1C, 0x07, 0xE2, 0x24, 0x24, 0x24, 0xE4, 0x04, 0x04, 0xFC, 0x04, 0x04, 0x00, //何当共剪西窗烛
		0x00, 0x00, 0x40, 0x42, 0x5C, 0x48, 0x40, 0x40, 0x7F, 0x40, 0x50, 0x4E, 0x44, 0xC0, 0x00, 0x00,
		0x00, 0x10, 0x10, 0x10, 0x10, 0xFE, 0x10, 0x10, 0x10, 0x10, 0xFE, 0x10, 0x10, 0x10, 0x00, 0x00,
		0x00, 0x04, 0xF4, 0x54, 0x55, 0x56, 0x54, 0xF4, 0x04, 0x04, 0xE6, 0x05, 0x04, 0xF4, 0x04, 0x00,
		0x02, 0xF2, 0x12, 0x12, 0x12, 0xFE, 0x12, 0x12, 0x12, 0xFE, 0x12, 0x12, 0x12, 0xF2, 0x02, 0x00,
		0x00, 0x4C, 0x44, 0xE4, 0x54, 0x44, 0x64, 0xD5, 0x46, 0x44, 0x4C, 0x54, 0xD4, 0x24, 0x2C, 0x00,
		0x80, 0x60, 0x00, 0xFF, 0x20, 0x18, 0xF0, 0x10, 0x10, 0xFF, 0x12, 0x10, 0xF0, 0x10, 0x00, 0x00},

	{0x00, 0x00, 0x7F, 0x00, 0x00, 0x07, 0x02, 0x02, 0x02, 0x07, 0x20, 0x40, 0x3F, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x20, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x7F, 0x00, 0x00,
		0x02, 0x02, 0x82, 0x42, 0x32, 0x1F, 0x0A, 0x02, 0x02, 0x06, 0x0B, 0x32, 0xE2, 0x42, 0x02, 0x00,
		0x00, 0x08, 0x8F, 0x89, 0x49, 0x2B, 0x1D, 0x0B, 0x08, 0x08, 0x08, 0x4A, 0x8C, 0x7B, 0x00, 0x00,
		0x00, 0x7F, 0x28, 0x24, 0x22, 0x21, 0x20, 0x20, 0x20, 0x21, 0x22, 0x22, 0x22, 0x7F, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xFF, 0x44, 0x62, 0x55, 0x49, 0x55, 0x43, 0x41, 0x40, 0xFF, 0x00, 0x00, 0x00,
		0x40, 0x20, 0x18, 0x07, 0x04, 0x28, 0x63, 0x21, 0x21, 0x3F, 0x11, 0x15, 0x1B, 0x30, 0x00, 0x00},

	{0x80, 0x88, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x88, 0x00, 0xFE, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, //却话巴山夜雨时
		0x40, 0x41, 0x4E, 0xC4, 0x00, 0x20, 0x24, 0x24, 0x24, 0x24, 0xFC, 0x22, 0x22, 0x22, 0x20, 0x00,
		0x00, 0x00, 0xFE, 0x42, 0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x42, 0xFE, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
		0x04, 0x04, 0x84, 0xC4, 0x3C, 0x14, 0x85, 0x66, 0xBC, 0x24, 0x24, 0x24, 0xE4, 0x24, 0x04, 0x00,
		0x02, 0x02, 0xF2, 0x32, 0x52, 0x92, 0x12, 0xFE, 0x32, 0x52, 0x92, 0x12, 0xF2, 0x02, 0x02, 0x00,
		0x00, 0xFC, 0x44, 0x44, 0x44, 0xFC, 0x10, 0x90, 0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10, 0x00},

	{0x00, 0x10, 0x3C, 0x13, 0x10, 0x08, 0x0A, 0x1C, 0x08, 0xFF, 0x00, 0x08, 0x10, 0x0F, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x7F, 0x20, 0x10, 0x00, 0x7E, 0x22, 0x22, 0x23, 0x22, 0x22, 0x7E, 0x00, 0x00,
		0x00, 0x00, 0x3F, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x78, 0x20, 0x00,
		0x00, 0x20, 0x7F, 0x20, 0x20, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7F, 0x00, 0x00,
		0x02, 0x01, 0x00, 0xFF, 0x00, 0x82, 0x41, 0x22, 0x14, 0x09, 0x14, 0x23, 0x40, 0xC0, 0x40, 0x00,
		0x00, 0x00, 0xFF, 0x01, 0x02, 0x04, 0x00, 0x7F, 0x01, 0x02, 0x44, 0x80, 0x7F, 0x00, 0x00, 0x00,
		0x00, 0x07, 0x04, 0x04, 0x04, 0x07, 0x00, 0x00, 0x03, 0x40, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00},
}

func lcd_ascii168(hd *st7565p.LCD, char byte, x /*column*/, y /*page*/ byte) error {
	hd.SetCursor(x /*column*/, y /*page*/)

	val := Ascii168[char]
	for i := 0; i < 8; i++ {
		hd.WriteData(val[i])
	}
	hd.SetCursor(x /*column*/, y+1 /*page*/)
	for i := 8; i < 16; i++ {
		hd.WriteData(val[i])
	}
}

var Ascii168 = [...][16]byte{
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //" ",0
	{0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x30, 0x00, 0x00, 0x00}, //"!",1
	{0x00, 0x10, 0x0C, 0x06, 0x10, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //""",2
	{0x40, 0xC0, 0x78, 0x40, 0xC0, 0x78, 0x40, 0x00, 0x04, 0x3F, 0x04, 0x04, 0x3F, 0x04, 0x04, 0x00}, //"#",3
	{0x00, 0x70, 0x88, 0xFC, 0x08, 0x30, 0x00, 0x00, 0x00, 0x18, 0x20, 0xFF, 0x21, 0x1E, 0x00, 0x00}, //"$",4
	{0xF0, 0x08, 0xF0, 0x00, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x21, 0x1C, 0x03, 0x1E, 0x21, 0x1E, 0x00}, //"%",5
	{0x00, 0xF0, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00, 0x1E, 0x21, 0x23, 0x24, 0x19, 0x27, 0x21, 0x10}, //"&",6
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xB0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, //",",7
	{0x00, 0x00, 0x00, 0xE0, 0x18, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x18, 0x20, 0x40, 0x00}, //"(",8
	{0x00, 0x02, 0x04, 0x18, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x18, 0x07, 0x00, 0x00, 0x00}, //")",9
	{0x40, 0x40, 0x80, 0xF0, 0x80, 0x40, 0x40, 0x00, 0x02, 0x02, 0x01, 0x0F, 0x01, 0x02, 0x02, 0x00}, //"*",10
	{0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x1F, 0x01, 0x01, 0x01, 0x00}, //"+",11
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xB0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, //",",12
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01}, //"-",13
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00}, //".",14
	{0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x04, 0x00, 0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00}, //"/",15
	{0x00, 0xE0, 0x10, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x00, 0x0F, 0x10, 0x20, 0x20, 0x10, 0x0F, 0x00}, //"0",16
	{0x00, 0x10, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00}, //"1",17
	{0x00, 0x70, 0x08, 0x08, 0x08, 0x88, 0x70, 0x00, 0x00, 0x30, 0x28, 0x24, 0x22, 0x21, 0x30, 0x00}, //"2",18
	{0x00, 0x30, 0x08, 0x88, 0x88, 0x48, 0x30, 0x00, 0x00, 0x18, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"3",19
	{0x00, 0x00, 0xC0, 0x20, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x07, 0x04, 0x24, 0x24, 0x3F, 0x24, 0x00}, //"4",20
	{0x00, 0xF8, 0x08, 0x88, 0x88, 0x08, 0x08, 0x00, 0x00, 0x19, 0x21, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"5",21
	{0x00, 0xE0, 0x10, 0x88, 0x88, 0x18, 0x00, 0x00, 0x00, 0x0F, 0x11, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"6",22
	{0x00, 0x38, 0x08, 0x08, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00}, //"7",23
	{0x00, 0x70, 0x88, 0x08, 0x08, 0x88, 0x70, 0x00, 0x00, 0x1C, 0x22, 0x21, 0x21, 0x22, 0x1C, 0x00}, //"8",24
	{0x00, 0xE0, 0x10, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x31, 0x22, 0x22, 0x11, 0x0F, 0x00}, //"9",25
	{0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00}, //":",26
	{0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00}, //";",27
	{0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00}, //"<",28
	{0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00}, //"=",29
	{0x00, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00}, //">",30
	{0x00, 0x70, 0x48, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x30, 0x36, 0x01, 0x00, 0x00}, //"?",31
	{0xC0, 0x30, 0xC8, 0x28, 0xE8, 0x10, 0xE0, 0x00, 0x07, 0x18, 0x27, 0x24, 0x23, 0x14, 0x0B, 0x00}, //"@",32
	{0x00, 0x00, 0xC0, 0x38, 0xE0, 0x00, 0x00, 0x00, 0x20, 0x3C, 0x23, 0x02, 0x02, 0x27, 0x38, 0x20}, //"A",33
	{0x08, 0xF8, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"B",34
	{0xC0, 0x30, 0x08, 0x08, 0x08, 0x08, 0x38, 0x00, 0x07, 0x18, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00}, //"C",35
	{0x08, 0xF8, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00}, //"D",36
	{0x08, 0xF8, 0x88, 0x88, 0xE8, 0x08, 0x10, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x23, 0x20, 0x18, 0x00}, //"E",37
	{0x08, 0xF8, 0x88, 0x88, 0xE8, 0x08, 0x10, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x03, 0x00, 0x00, 0x00}, //"F",38
	{0xC0, 0x30, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00, 0x07, 0x18, 0x20, 0x20, 0x22, 0x1E, 0x02, 0x00}, //"G",39
	{0x08, 0xF8, 0x08, 0x00, 0x00, 0x08, 0xF8, 0x08, 0x20, 0x3F, 0x21, 0x01, 0x01, 0x21, 0x3F, 0x20}, //"H",40
	{0x00, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00}, //"I",41
	{0x00, 0x00, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x00, 0xC0, 0x80, 0x80, 0x80, 0x7F, 0x00, 0x00, 0x00}, //"J",42
	{0x08, 0xF8, 0x88, 0xC0, 0x28, 0x18, 0x08, 0x00, 0x20, 0x3F, 0x20, 0x01, 0x26, 0x38, 0x20, 0x00}, //"K",43
	{0x08, 0xF8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x30, 0x00}, //"L",44
	{0x08, 0xF8, 0xF8, 0x00, 0xF8, 0xF8, 0x08, 0x00, 0x20, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x20, 0x00}, //"M",45
	{0x08, 0xF8, 0x30, 0xC0, 0x00, 0x08, 0xF8, 0x08, 0x20, 0x3F, 0x20, 0x00, 0x07, 0x18, 0x3F, 0x00}, //"N",46
	{0xE0, 0x10, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00}, //"O",47
	{0x08, 0xF8, 0x08, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x20, 0x3F, 0x21, 0x01, 0x01, 0x01, 0x00, 0x00}, //"P",48
	{0xE0, 0x10, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x0F, 0x18, 0x24, 0x24, 0x38, 0x50, 0x4F, 0x00}, //"Q",49
	{0x08, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x03, 0x0C, 0x30, 0x20}, //"R",50
	{0x00, 0x70, 0x88, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00, 0x38, 0x20, 0x21, 0x21, 0x22, 0x1C, 0x00}, //"S",51
	{0x18, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x18, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x00, 0x00}, //"T",52
	{0x08, 0xF8, 0x08, 0x00, 0x00, 0x08, 0xF8, 0x08, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x00}, //"U",53
	{0x08, 0x78, 0x88, 0x00, 0x00, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x07, 0x38, 0x0E, 0x01, 0x00, 0x00}, //"V",54
	{0xF8, 0x08, 0x00, 0xF8, 0x00, 0x08, 0xF8, 0x00, 0x03, 0x3C, 0x07, 0x00, 0x07, 0x3C, 0x03, 0x00}, //"W",55
	{0x08, 0x18, 0x68, 0x80, 0x80, 0x68, 0x18, 0x08, 0x20, 0x30, 0x2C, 0x03, 0x03, 0x2C, 0x30, 0x20}, //"X",56
	{0x08, 0x38, 0xC8, 0x00, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x00, 0x00}, //"Y",57
	{0x10, 0x08, 0x08, 0x08, 0xC8, 0x38, 0x08, 0x00, 0x20, 0x38, 0x26, 0x21, 0x20, 0x20, 0x18, 0x00}, //"Z",58
	{0x00, 0x00, 0x00, 0xFE, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x00}, //"[",59
	{0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x04, 0x00, 0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00}, //"/",60
	{0x00, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x7F, 0x00, 0x00, 0x00}, //"]",61
	{0x00, 0x00, 0x04, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //"^",62
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01}, //"-",63
	{0x00, 0x0C, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x38, 0xC0, 0x00}, //"\",64
	{0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x19, 0x24, 0x22, 0x22, 0x22, 0x3F, 0x20}, //"a",65
	{0x08, 0xF8, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x11, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"b",66
	{0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0x20, 0x11, 0x00}, //"c",67
	{0x00, 0x00, 0x00, 0x80, 0x80, 0x88, 0xF8, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0x10, 0x3F, 0x20}, //"d",68
	{0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x22, 0x22, 0x22, 0x22, 0x13, 0x00}, //"e",69
	{0x00, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0x18, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00}, //"f",70
	{0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x6B, 0x94, 0x94, 0x94, 0x93, 0x60, 0x00}, //"g",71
	{0x08, 0xF8, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x3F, 0x21, 0x00, 0x00, 0x20, 0x3F, 0x20}, //"h",72
	{0x00, 0x80, 0x98, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00}, //"i",73
	{0x00, 0x00, 0x00, 0x80, 0x98, 0x98, 0x00, 0x00, 0x00, 0xC0, 0x80, 0x80, 0x80, 0x7F, 0x00, 0x00}, //"j",74
	{0x08, 0xF8, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x20, 0x3F, 0x24, 0x02, 0x2D, 0x30, 0x20, 0x00}, //"k",75
	{0x00, 0x08, 0x08, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00}, //"l",76
	{0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x3F, 0x20, 0x00, 0x3F}, //"m",77
	{0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x3F, 0x21, 0x00, 0x00, 0x20, 0x3F, 0x20}, //"n",79
	{0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x00}, //"o",80
	{0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xA1, 0x20, 0x20, 0x11, 0x0E, 0x00}, //"p",81
	{0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0xA0, 0xFF, 0x80}, //"q",82
	{0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x20, 0x20, 0x3F, 0x21, 0x20, 0x00, 0x01, 0x00}, //"r",83
	{0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x33, 0x24, 0x24, 0x24, 0x24, 0x19, 0x00}, //"s",84
	{0x00, 0x80, 0x80, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x00, 0x00}, //"t",85
	{0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x10, 0x3F, 0x20}, //"u",86
	{0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x01, 0x0E, 0x30, 0x08, 0x06, 0x01, 0x00}, //"v",87
	{0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x0F, 0x30, 0x0C, 0x03, 0x0C, 0x30, 0x0F, 0x00}, //"w",88
	{0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x31, 0x2E, 0x0E, 0x31, 0x20, 0x00}, //"x",89
	{0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x81, 0x8E, 0x70, 0x18, 0x06, 0x01, 0x00}, //"y",90
	{0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x21, 0x30, 0x2C, 0x22, 0x21, 0x30, 0x00}, //"z",91
	{0x00, 0x00, 0x00, 0x00, 0x80, 0x7C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x40, 0x40}, //"{",92
	{0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00}, //"|",93
	{0x00, 0x02, 0x02, 0x7C, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00, 0x00}, //"}",94
	{0x00, 0x06, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //"~",95
}
